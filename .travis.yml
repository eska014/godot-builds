language: cpp

sudo: required
dist: trusty

# Disable builds on normal pushes, we only want to build tags
branches:
  except:
  - master
  - 2.0
  - 2.1


compiler:
  - gcc
  - clang

os:
  - linux
  - osx

env:
  global:
    - BUILD_REVISION=official
    - OPTIONS="warnings=no builtin_libpng=yes builtin_openssl=yes builtin_zlib=yes"
  matrix:
    - PLATFORM=iphone TARGET=release
    - PLATFORM=iphone TARGET=release_debug
    - PLATFORM=javascript WASM=no TARGET=release
    - PLATFORM=javascript WASM=no TARGET=release_debug
    - PLATFORM=javascript WASM=yes TARGET=release
    - PLATFORM=javascript WASM=yes TARGET=release_debug
    - PLATFORM=osx BITS=fat TOOLS=yes TARGET=release_debug
    - PLATFORM=osx BITS=fat TOOLS=no TARGET=release
    - PLATFORM=osx BITS=fat TOOLS=no TARGET=release_debug
    - PLATFORM=server BITS=64 TOOLS=yes
    - PLATFORM=x11 BITS=32 TOOLS=yes
    - PLATFORM=x11 BITS=32 TOOLS=no
    - PLATFORM=x11 BITS=64 TOOLS=yes
    - PLATFORM=x11 BITS=64 TOOLS=no
    - PLATFORM=android TARGET=release ANDROID_ARCH=armv7
    - PLATFORM=android TARGET=release ANDROID_ARCH=x86
    - PLATFORM=android TARGET=release_debug ANDROID_ARCH=armv7
    - PLATFORM=android TARGET=release_debug ANDROID_ARCH=x86

matrix:
  exclude:
    - os: linux
      env: PLATFORM=android TARGET=release ANDROID_ARCH=armv7
    - os: linux
      env: PLATFORM=android TARGET=release ANDROID_ARCH=x86
    - os: linux
      env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=armv7
    - os: linux
      env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=x86
    - os: linux
      env: PLATFORM=iphone TARGET=release
    - os: linux
      env: PLATFORM=iphone TARGET=release_debug
    - os: linux
      env: PLATFORM=javascript WASM=no TARGET=release
    - os: linux
      env: PLATFORM=javascript WASM=no TARGET=release_debug
    - os: linux
      env: PLATFORM=javascript WASM=yes TARGET=release
    - os: linux
      env: PLATFORM=javascript WASM=yes TARGET=release_debug
    - os: linux
      env: PLATFORM=osx BITS=fat TOOLS=yes TARGET=release_debug
    - os: linux
      env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release
    - os: linux
      env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release_debug
    - os: osx
      env: PLATFORM=server BITS=64 TOOLS=yes
    - os: osx
      env: PLATFORM=x11 BITS=32 TOOLS=yes
    - os: osx
      env: PLATFORM=x11 BITS=32 TOOLS=no
    - os: osx
      env: PLATFORM=x11 BITS=64 TOOLS=yes
    - os: osx
      env: PLATFORM=x11 BITS=64 TOOLS=no
    - compiler: gcc
      env: PLATFORM=iphone TARGET=release
    - compiler: gcc
      env: PLATFORM=iphone TARGET=release_debug
    - compiler: gcc
      env: PLATFORM=javascript WASM=no TARGET=release
    - compiler: gcc
      env: PLATFORM=javascript WASM=no TARGET=release_debug
    - compiler: gcc
      env: PLATFORM=javascript WASM=yes TARGET=release
    - compiler: gcc
      env: PLATFORM=javascript WASM=yes TARGET=release_debug
    - compiler: gcc
      env: PLATFORM=osx BITS=fat TOOLS=yes TARGET=release_debug
    - compiler: gcc
      env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release
    - compiler: gcc
      env: PLATFORM=osx BITS=fat TOOLS=no TARGET=release_debug
    - compiler: clang
      env: PLATFORM=android TARGET=release ANDROID_ARCH=armv7
    - compiler: clang
      env: PLATFORM=android TARGET=release ANDROID_ARCH=x86
    - compiler: clang
      env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=armv7
    - compiler: clang
      env: PLATFORM=android TARGET=release_debug ANDROID_ARCH=x86
    - compiler: clang
      env: PLATFORM=server BITS=64 TOOLS=yes
    - compiler: clang
      env: PLATFORM=x11 BITS=32 TOOLS=yes
    - compiler: clang
      env: PLATFORM=x11 BITS=32 TOOLS=no
    - compiler: clang
      env: PLATFORM=x11 BITS=64 TOOLS=yes
    - compiler: clang
      env: PLATFORM=x11 BITS=64 TOOLS=no


before_script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; sudo apt-get install -y scons pkg-config build-essential; fi;
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew install scons; fi;
  - if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$PLATFORM" = "android" ]; then
      brew tap caskroom/cask; brew cask install android-sdk;
      export ANDROID_HOME=/usr/local/share/android-sdk;
      wget https://dl.google.com/android/repository/android-ndk-r14b-darwin-x86_64.zip;
      unzip -d $HOME android-ndk-r14b-darwin-x86_64.zip | grep -v "inflating:" | grep -v "creating:";
      export ANDROID_NDK_ROOT="$HOME/android-ndk-r14b";
    fi;
  - if [ "$PLATFORM" = "x11" ]; then
      sudo apt-get install -y libx11-dev libxcursor-dev libxrandr-dev libasound2-dev libpulse-dev libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev libssl-dev libxinerama-dev libudev-dev;
      if [ "$BITS" = "32" ]; then
          sudo dpkg --add-architecture i386; sudo apt-get update -qq; sudo apt-get install -y --only-upgrade g++ gcc libstdc++6;
          sudo apt-get install -y gcc-multilib g++-multilib pkg-config:i386 libx11-dev:i386 libxcursor-dev:i386 libxrandr-dev:i386 libasound2-dev:i386 libpulse-dev:i386 libfreetype6-dev:i386 libgl1-mesa-dev:i386 libglu1-mesa-dev:i386 libssl-dev:i386 libxinerama-dev:i386 libudev-dev:i386;
      fi;
    fi;
  - if [ "$PLATFORM" = "javascript" ]; then
      cd $HOME;
      wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz;
      tar -xzf emsdk-portable.tar.gz;
      cd emsdk-portable; ./emsdk update; ./emsdk install latest; ./emsdk activate latest;
      source ./emsdk_env.sh;
      cd $TRAVIS_BUILD_DIR;
      export EMSCRIPTEN_ROOT=`em-config EMSCRIPTEN_ROOT`;
    fi;


script:
  - cd godot; for patch in $(find ../patches -type f); do git apply $patch; done;
  - if [ "$PLATFORM" = "osx" ]; then
      scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS tools=$TOOLS bits=$BITS target=$TARGET;
    fi;
  - if [ "$PLATFORM" = "x11" -o "$PLATFORM" = "server" ]; then
      if [ "$TOOLS" = "yes" ]; then scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS tools=yes use_static_cpp=yes bits=$BITS target=release_debug;
      else scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS tools=no use_static_cpp=yes bits=$BITS target=release;
           scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS tools=no use_static_cpp=yes bits=$BITS target=release_debug;
      fi;
    fi;
  - if [ "$PLATFORM" = "android" ]; then
      scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS target=$TARGET android_arch=$ANDROID_ARCH;
    fi;
  - if [ "$PLATFORM" = "iphone" ]; then
      scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS arch=arm target=$TARGET;
      scons -j2 platform=$PLATFORM CXX=$CXX $OPTIONS arch=arm64 target=$TARGET;
    fi;
  - if [ "$PLATFORM" = "javascript" ]; then
      scons -j2 platform=$PLATFORM wasm=$WASM CXX=$CXX $OPTIONS target=$TARGET;
    fi;


before_deploy:
  - if [ "$PLATFORM" = "iphone" ]; then
      if [ "$TARGET" = "release" ]; then target_tag="opt"; else target_tag="opt.debug"; fi;
      lipo -create -arch armv7 bin/godot.iphone.$target_tag.arm -arch arm64 bin/godot.iphone.$target_tag.arm64 -output bin/godot.iphone.$target_tag.universal;
      rm -rf bin/godot.iphone.$target_tag.arm*;
    fi;
  - if [ "$PLATFORM" = "javascript" ]; then
      if [ "$TARGET" = "release" ]; then target_tag="opt"; else target_tag="opt.debug"; fi;
      if [ "$WASM" = "yes" ]; then target_tag=target_tag+".webassembly"; fi;
      rm -f bin/godot.javascript.$target_tag.wasm;
      rm -f bin/godot.javascript.$target_tag.asm.js;
      rm -f bin/godot.javascript.$target_tag.js;
      rm -f bin/godot.javascript.$target_tag.html*;
    fi;
  - if [ "$PLATFORM" = "android" ]; then
      if [ "$TARGET" = "release" ]; then target_tag="release"; else target_tag="debug"; fi;
      if [ "$ANDROID_ARCH" = "armv7" ]; then android_arch="armeabi-v7a"; else android_arch="x86"; fi;
      cp platform/android/java/libs/$target_tag/$android_arch/libgodot_android.so bin/libgodot.android.opt.$target_tag.$android_arch.so;
    fi;


deploy:
  provider: releases
  api_key:
    secure: tCFCHet6fgtf1+sgQEft4XTIfNH2JrqRx+YaatEfEEVNkHbY3SnRdtvcZeTeHc1LNpf6S0eU45RkBHeyN1Gna80Yiz8uep7rFuUTp5XtZsRfNecw/ebhPlyOEf3AhCVBJ3e3RxT2V1i/+8HyaWBisbXMZ1R+w07M3BxQrTpJflb7iSIXYTF//BxBtC1Atp7egDoU97OJfLSPEhPbjGhMoUuLTe7wmZqd7zK3DNTatL/pXefLN67N15dOra0LNgBHo1o6P4wcVBT2V+o9/TK5RAyUi5TqoudETgq2pBdAE558OuBbHh1dwDrs9b9ZbUC0mLautadiSbCkU0nLmYapaCKGr4+DpnZCxZYgzcYb5UPb6u6Rs3pY11JFtPYIXR2C1UJh4rpBIQa+F/eBKnw+QztnjfYWxJYq2T73CuFLgku89x99cVq7EiP0g/lZp64HxyENOcyL0FlWwjmq2vnr8BKNhDEVAXIUB1JsH8VshvndlgLhaRyRe+rkXnikLX8Nm6Z9V4pCjnRuCgiwZtYjxMTBhk30ZtXUg4uzCVmbvbUql8PPNrWDeq9yoUVe55kqU6DsxM1CEIou7Qcua2eeXcUkOGCgpXH4W0NXWBFo7Ze7FWHeKSHAcBeUrUpbiY75fcFdVjY/uUJaXQpem64Xm0O8GxK67CsBqAJahD1hxjc=
  file_glob: true
  file:
    - bin/*godot*.$PLATFORM.opt.*
  skip_cleanup: true
  on:
    repo: GodotBuilder/godot-builds
    tags: true
